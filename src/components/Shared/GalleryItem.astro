---
import type { ImageMetadata } from 'astro';
import { Image } from 'astro:assets';

interface Props {
   imagePath: string;
   altText: string;
   widths: number[];
   classList: string;
}

const { imagePath, altText, widths, classList } = Astro.props;

// Carica le immagini dinamicamente tramite glob
const images = import.meta.glob<{ default: ImageMetadata }>('/src/assets/img/cms/**/*.{jpeg,jpg,png,gif,webp}');

// Verifica se l'immagine esiste nel glob
if (!images[imagePath]) {
  throw new Error(`"${imagePath}" non esiste nel glob: "src/assets/img/cms/*/*.{jpeg,jpg,png,gif,webp}"`);
}

// Risolvi la promessa per ottenere i metadati
const imageMeta = await images[imagePath](); // Risolvi la promessa
const imageWidth = imageMeta.default.width;  // Larghezza dell'immagine in pixel
const imageHeight = imageMeta.default.height; // Altezza dell'immagine in pixel
if(imageWidth>=2500 || imageHeight>=2500){
  var scale = Math.min(2500 / imageWidth, 2500 / imageHeight); //ridimensione immagine superiore ai 2500px
}else{
  var scale = 1
}
---

<!-- Usa il componente Image per renderizzare l'immagine -->
<a href={imageMeta.default.src} target="_blank" rel="noopener noreferrer" class="aspect-square" data-pswp-width={imageWidth*scale} data-pswp-height={imageHeight*scale}>
<Image
  src={images[imagePath]()}
  widths={widths}
  sizes="100vw"
  format="webp"
  alt={altText}
  class={classList}
/>
</a>
